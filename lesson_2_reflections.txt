What happens when you initialize a repository? Why do you need to do it?
A file with the filename extension called .git is built, and
this does favor of keeping a record of commits.

How is the staging area different from the working directory and the repository? What value do you think it offers?
Staging area is where the programmer decides how many files transit to the repository.
It provides a more flexible interface for users to package a certain pattern of files in each logic change.

How can you use the staging area to make sure you have one commit per logical change?
By typing git diff --staged

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When creating a new version of interface assisting another language or providing another level of access,
it takes advantage to use brances. This kind of tool help turn back to the offical version of file that
is flexible to extend possible applications and adjustment for any situations.

How do the diagrams help you visualize the branch structure?
By keying in git log branch_1 branch_2, the window shows how branch_1 links to branch_2.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Branches are combined together into one master branch, and the commits are listed based on time sequence.
Listed in the diagram, it is straightforward to search for the relevant changes.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Doing merge automatically helps see the instant result of combining the adjusted or additional functions
in the program, but this would face a risk of unexpected outcome if merging process is not compatible.
For manul method, it is more flexible for users to do merge. In return of this, it takes more time. 
